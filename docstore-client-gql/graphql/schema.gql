input AddOwnerRequest {
  name: String!
}

input ListOwnersRequest {
  offset: Int!
  limit: Int!
}

type ListOwnersResponse {
  owners: [OwnerResponse!]!
  count: Int!
}

type Mutation {
  addOwner(request: AddOwnerRequest!): OwnerResponse!
}

type OwnerResponse {
  id: UUID!
  name: String!
}

type Query {
  listOwners(request: ListOwnersRequest!): ListOwnersResponse!
}

# A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as Strings
# within GraphQL. UUIDs are used to assign unique identifiers to entities without requiring a central
# allocating authority.
#
# # References
#
# * [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
# * [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
scalar UUID
